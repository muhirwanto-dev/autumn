@page "/"
@using Autumn.Wasm.ViewModel
@using Blazing.Mvvm.Components

@inherits MvvmComponentBase<HomeViewModel>

<PageTitle>Home</PageTitle>

<div style="margin-block: 100px"></div>

<MudContainer MaxWidth="MaxWidth.Large">
    <MudStack AlignItems="AlignItems.Center">
        <MudText Typo="Typo.h3" Class="fw-bold mt-5" Align="Align.Center" Color="Color.Primary">Hi! I'm 
            <MudText Inline="true" Typo="Typo.h3" Class="fw-bold mt-5" Color="Color.Secondary">@(ViewModel!.Profile?.NickName ?? ViewModel!.Profile?.FirstName)</MudText>, nice to meet you!</MudText>
        <MudText Style="margin-left: 150px; margin-right: 150px;" Typo="Typo.h6" Align="Align.Center">@ViewModel!.Profile?.TagLine</MudText>
        <MudImage Src="images/home_banner.png" Alt=".NET Developer banner" Height="360" Class="rounded-lg mx-4 mt-4" />
    </MudStack>
</MudContainer>

@if (ViewModel!.Profile?.AboutMe is string aboutMe)
{
    <MudContainer Class="mud-theme-primary w-100" Style="padding: 120px; padding-bottom: 250px;">
        <MudText Align="Align.Center" Typo="Typo.h3" Class="fw-bold my-5 text-white">ABOUT 
            <MudText Inline="true" Typo="Typo.h3" Class="fw-bold my-5" Color="Color.Secondary">ME</MudText>
            </MudText>
        <MudText Align="Align.Center" Class="text-white">@aboutMe</MudText>
    </MudContainer>
}

<MudContainer MaxWidth="MaxWidth.Large" Style="margin-top: -100px;" Class="d-flex gap-3">
    @foreach (var role in ViewModel!.Profile?.Roles ?? [])
    {
        <MudCard Class="flex-grow-1 col" Style="padding-top: 50px; padding-bottom: 50px; padding-left: 20px; padding-right: 20px;">
            <MudCardContent>
                <MudStack AlignItems="AlignItems.Center" Justify="Justify.Center">
                    <MudImage Src="@(role.Image ?? role.ImageUrl)" Height="96" Width="96" Class="rounded-circle p-3" Style="background-color: plum;" />
                    <MudText Typo="Typo.h6" Class="fw-bold" Align="Align.Center">@role.RoleName</MudText>
                    <MudText Typo="Typo.body1" Align="Align.Center">@role.RoleDescription</MudText>

                    <MudStack Row="true" Justify="Justify.FlexStart" Wrap="Wrap.Wrap" Spacing="0">
                        @foreach (var tech in role.TechStack)
                        {
                            <MudChip T="string">@tech</MudChip>
                        }
                    </MudStack>
                </MudStack>
            </MudCardContent>
        </MudCard>
    }
</MudContainer>

<MudContainer Class="w-75" Style="margin-block: 150px;">
    <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center">
        <MudText Typo="Typo.h3" Align="Align.Center">SKILLS</MudText>
        <MudDivider DividerType="DividerType.Middle" Class="w-25" Style="margin-bottom: 20px; height: 2px;" />
        <MudGrid Spacing="3" Justify="Justify.Center" Class="w-100">
            @foreach (var skill in ViewModel!.Skills.Where(e => e.Score.HasValue))
            {
                <MudItem sm="4">
                    <MudText>@skill.Name</MudText>
                </MudItem>
                <MudItem sm="7">
                    <MudProgressLinear Color="Color.Warning" Rounded="true" Size="Size.Large" Value="@skill.Score!.Value"
                        Style="margin-top: 7.5px;"/>
                </MudItem>
                <MudItem sm="1">
                    <MudText Typo="Typo.subtitle1">@skill.Score!.Value</MudText>
                </MudItem>
            }
        </MudGrid>
        <MudStack>
            <MudText Typo="Typo.h5" Class="mt-2">Other Skills</MudText>
            <MudStack Justify="Justify.FlexStart" Row="true" Wrap="Wrap.Wrap">
                @foreach (var skill in ViewModel!.Skills.Where(e => !string.IsNullOrEmpty(e.Icon) || !string.IsNullOrEmpty(e.IconUrl)))
                {
                    <MudImage Src="@(skill.IconUrl ?? skill.Icon)" Height="48" ObjectFit="ObjectFit.Contain" />
                }
            </MudStack>
        </MudStack>
    </MudStack>
</MudContainer>

<MudContainer Style="margin-block: 150px;">
    <MudStack Justify="Justify.Center" AlignItems="AlignItems.Center">
        <MudText Align="Align.Center" Typo="Typo.h3">EXPERIENCES</MudText>
        <MudDivider DividerType="DividerType.Middle" Class="w-25" Style="margin-bottom: 20px; height: 2px;" />
        <MudTimeline TimelinePosition="TimelinePosition.Alternate" TimelineAlign="TimelineAlign.Start">
            @foreach (var exp in ViewModel!.Experiences
                .Where(e => !string.IsNullOrEmpty(e.StartDate))
                .OrderByDescending(e => DateTime.Parse(e.StartDate!)))
            {
                bool isActive = exp.EndDate?.Equals("Present", StringComparison.CurrentCultureIgnoreCase) ?? false;
                Color timelineColor = isActive ? Color.Success : Color.Default;
                Size timelineSize = isActive ? Size.Medium : Size.Small;

                <MudTimelineItem Color="@timelineColor" Variant="Variant.Outlined" Size="@timelineSize">
                    <ItemContent>
                        <MudText Color="Color.Info" Typo="Typo.h6">@($"{exp.StartDate} - {exp.EndDate}")</MudText>
                        <MudText Typo="Typo.h6" Class="mb-4">@exp.CompanyName</MudText>
                        <MudText>@exp.Description</MudText>
                    </ItemContent>
                </MudTimelineItem>
            }
        </MudTimeline>
    </MudStack>
</MudContainer>

<MudContainer>
    <MudStack AlignItems="AlignItems.Center" Style="margin-top: 100px;">
        <MudText Align="Align.Center" Typo="Typo.h4" Class="fw-bold my-5">MY PROJECTS</MudText>
        <MudDivider DividerType="DividerType.Middle" Class="w-25" Style="margin-bottom: 20px; height: 2px;" />
        <MudText Align="Align.Center">Here are a few past projects I've worked on.</MudText>

    </MudStack>
</MudContainer>

<MudScrollToTop>
    <MudFab Color="Color.Tertiary" StartIcon="@Icons.Material.Filled.ArrowUpward" />
</MudScrollToTop>